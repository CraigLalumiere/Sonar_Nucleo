/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9-dev */

#ifndef PB_CLIDATA_PB_H_INCLUDED
#define PB_CLIDATA_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef PB_BYTES_ARRAY_T(64) CLIData_msg_t;
/* A CLI data message */
typedef struct _CLIData {
    CLIData_msg_t msg;
} CLIData;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define CLIData_init_default                     {{0, {0}}}
#define CLIData_init_zero                        {{0, {0}}}

/* Field tags (for use in manual encoding/decoding) */
#define CLIData_msg_tag                          1

/* Struct field encoding specification for nanopb */
#define CLIData_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, BYTES,    msg,               1)
#define CLIData_CALLBACK NULL
#define CLIData_DEFAULT NULL

extern const pb_msgdesc_t CLIData_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define CLIData_fields &CLIData_msg

/* Maximum encoded size of messages (where known) */
#define CLIDATA_PB_H_MAX_SIZE                    CLIData_size
#define CLIData_size                             66

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
