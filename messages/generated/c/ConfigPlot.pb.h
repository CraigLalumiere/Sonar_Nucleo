/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9-dev */

#ifndef PB_CONFIGPLOT_PB_H_INCLUDED
#define PB_CONFIGPLOT_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _ConfigPlot {
    uint32_t plot_number;
    char plot_title[64];
    char x_label[64];
    char x_units[8];
    char y_label[64];
    char y_units[8];
} ConfigPlot;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define ConfigPlot_init_default                  {0, "", "", "", "", ""}
#define ConfigPlot_init_zero                     {0, "", "", "", "", ""}

/* Field tags (for use in manual encoding/decoding) */
#define ConfigPlot_plot_number_tag               1
#define ConfigPlot_plot_title_tag                2
#define ConfigPlot_x_label_tag                   3
#define ConfigPlot_x_units_tag                   4
#define ConfigPlot_y_label_tag                   5
#define ConfigPlot_y_units_tag                   6

/* Struct field encoding specification for nanopb */
#define ConfigPlot_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UINT32,   plot_number,       1) \
X(a, STATIC,   REQUIRED, STRING,   plot_title,        2) \
X(a, STATIC,   REQUIRED, STRING,   x_label,           3) \
X(a, STATIC,   REQUIRED, STRING,   x_units,           4) \
X(a, STATIC,   REQUIRED, STRING,   y_label,           5) \
X(a, STATIC,   REQUIRED, STRING,   y_units,           6)
#define ConfigPlot_CALLBACK NULL
#define ConfigPlot_DEFAULT NULL

extern const pb_msgdesc_t ConfigPlot_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define ConfigPlot_fields &ConfigPlot_msg

/* Maximum encoded size of messages (where known) */
#define CONFIGPLOT_PB_H_MAX_SIZE                 ConfigPlot_size
#define ConfigPlot_size                          219

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
