/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9-dev */

#ifndef PB_LOGPRINT_PB_H_INCLUDED
#define PB_LOGPRINT_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
/* A log print message */
typedef struct _LogPrint {
    uint32_t milliseconds_tick;
    char msg[64];
} LogPrint;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define LogPrint_init_default                    {0, ""}
#define LogPrint_init_zero                       {0, ""}

/* Field tags (for use in manual encoding/decoding) */
#define LogPrint_milliseconds_tick_tag           1
#define LogPrint_msg_tag                         2

/* Struct field encoding specification for nanopb */
#define LogPrint_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UINT32,   milliseconds_tick,   1) \
X(a, STATIC,   REQUIRED, STRING,   msg,               2)
#define LogPrint_CALLBACK NULL
#define LogPrint_DEFAULT NULL

extern const pb_msgdesc_t LogPrint_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define LogPrint_fields &LogPrint_msg

/* Maximum encoded size of messages (where known) */
#define LOGPRINT_PB_H_MAX_SIZE                   LogPrint_size
#define LogPrint_size                            71

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
